import com.github.gradle.node.pnpm.task.PnpmTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'maven-publish'
    id 'org.springframework.boot.experimental.thin-launcher' version '1.0.29.RELEASE'
    id 'org.hibernate.orm' version '6.1.6.Final'

    id 'checkstyle'

    id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.nytdacm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    if (System.getenv("CI") == null) {
        // 本地开发时使用阿里云仓库
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
    }
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

def satokenVersion = '1.34.0'
def hutoolVersion = '5.8.11'

dependencies {
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation "cn.dev33:sa-token-spring-boot3-starter:$satokenVersion"
    implementation("cn.dev33:sa-token-jwt:$satokenVersion") {
        exclude module: 'hutool-core'
        exclude module: 'hutool-json'
    }
    implementation "cn.hutool:hutool-core:$hutoolVersion"
    implementation "cn.hutool:hutool-json:$hutoolVersion"


    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-lang:commons-lang:2.6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

hibernate {
    enhancement {
        lazyInitialization true
        dirtyTracking true
        associationManagement true
    }
}

node {
    download = false
    nodeProjectDir = nodeProjectDir.dir("$projectDir/web").get()
    if (System.getenv("CI") == null) {
        distBaseUrl = 'https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/'
    }
}


def cleanupOldWebBuild = tasks.register('cleanupOldWebBuild', Delete) {
    doLast {
        println '清空旧的构建'
        delete "$projectDir/src/main/resources/static"
    }
}

def buildWeb = tasks.register('buildWeb', PnpmTask) {
    dependsOn cleanupOldWebBuild
    dependsOn 'pnpmInstall'
    args = ['run', 'build']
}

tasks.named('build').configure {
    dependsOn buildWeb
}

tasks.named('bootJar').configure {
    dependsOn buildWeb
}
